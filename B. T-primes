
//* بِسْمِ اللهِ الرَّحْمٰنِ الرَّحِيْمِ ///*/
#include <bits/stdc++.h>

using namespace std;

#define pb push_back
#define fast cout.tie(0), cin.tie(0), ios_base::sync_with_stdio(0)
#define ll long long
#define vt vector<ll>
#define matrix vector<vector<ll>>
#define ff first
#define ss second
#define yes cout << "YES" << '\n';
#define no cout << "NO" << '\n';
#define ps(x, y) fixed << setprecision(y) << x;
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()
#define sortt(x) sort(all(x))
#define sorttr(x) sort(rall(x))
#define mems(a, x) memset(a, x, sizeof(a))
#define rev(x) reverse(all(x))
#define co cout <<
#define inp(x) cin >> x
#define espace cout << " "
#define ln cout << '\n'
#define takevect(x) for (auto &d : x) cin >> d;
#define len(s) (int)s.size()
#define rep(i, y) for (int i = 0; i < y; i++)
#define INF INT_MAX
bool sqrtt(ll x){
    ll e=sqrt(x);
    if((e*e)==x) return true;
    return false;
}
bool prime(ll d){
    for(int i=2;i<d;i++){
        if(d%i==0) return false;
    }
    return true;
}
ll arr[1000001]={0};
class solution{ 
public :
    void solve() {
        for(ll i=2;i<=1000;++i){
            for(ll j=2*i;j<=1000000;j+=i){
                arr[j]=1;
            }
        }
        ll n;inp(n);vt a(n);takevect(a);
        for(int i=0;i<n;i++){
            if(a[i]<=3){no;continue;}
            if(sqrtt(a[i])){
                ll mm=sqrt(a[i]);
                if(arr[mm]==0){
                    yes;continue;
                }
            }
            no;
        }
    }
};


signed main() {
    fast;
    cout << fixed;
    cout << setprecision(14);
    #ifndef ONLINE_JUDGE
        freopen("inp.txt", "r", stdin);
        freopen("out.txt", "w", stdout);
    #endif
    solution sol;
    // int test=1 ;  inp ( test );
    // while ( test -- ) 
    sol.solve();
    return 0;
}



