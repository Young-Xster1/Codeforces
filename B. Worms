//* بِسْمِ اللهِ الرَّحْمٰنِ الرَّحِيْمِ ///*/
#include <bits/stdc++.h>
 
using namespace std;
 
#define pb push_back
#define fast cout.tie(0), cin.tie(0), ios_base::sync_with_stdio(0)
#define ll long long
#define vt vector<int>
#define matrix vector<vector<int>>
#define ff first
#define ss second
#define yes cout << "YES" << '\n';
#define no cout << "NO" << '\n';
#define ps(x, y) fixed << setprecision(y) << x;
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()
#define sortt(x) sort(all(x))
#define sorttr(x) sort(rall(x))
#define mems(a, x) memset(a, x, sizeof(a))
#define rev(x)      reverse ( all(x) )
#define co      cout <<
#define inp(x) cin >> x
#define espace cout << " "
#define ln cout << '\n'
#define takevect(x) for (auto &d : x) cin >> d;
#define rep(i, y) for (int i = 0; i < y; i++)

 
void solve() {
    ll n;
    cin >> n;
    vector<ll> a(n);
    takevect(a);
 
    vector<ll> cumulative_sum(n);
    cumulative_sum[0] = a[0];
    for (int i = 1; i < n; i++) {
        cumulative_sum[i] = cumulative_sum[i - 1] + a[i];
    }
 
    ll m;
    inp(m);
    vector<ll> b(m);
    takevect(b);
 
    for (int i = 0; i < m; i++) {
        ll aux = b[i];
 
        int left = 0, right = n - 1;
        while (left <= right) {
            int mid = left + (right - left) / 2;
            if (cumulative_sum[mid] >= aux) {
                right = mid - 1;
            } else {
                left = mid + 1;
            }
        }
 
        co left + 1; ln;
    }
}
 
 
    
 
signed main() {
    fast;cout<<fixed;cout<<setprecision(14);
    #ifndef ONLINE_JUDGE
        freopen("inp.txt", "r", stdin);
        freopen("out.txt", "w", stdout);
    #endif
    // int test=1 ;  inp ( test );
    // while ( test -- ) 
    solve();
 
    return 0;
}
